Розробити функцію counter(a, b), 
яка приймає 2 аргументи -- цілі невід'ємні числа a та b, 
та повертає число -- кількість різних цифр числа b, які містяться у числі а.

Наприклад
Виклик функції: counter(12345, 567)
Повертає: 1
Виклик функції: counter(1233211, 12128)
Повертає: 2
Виклик функції: counter(123, 45)
Повертає: 0

import sys

a=int(sys.argv[1])
b=int(sys.argv[2])

def counter(a, b):
    # лічильник знайдених чисел
    num = 0
    # перетворимо числа на рядки для зручності порозрядної роботи (так, мені просто подобається цей прийом)
    a_str = str(a)
    b_str = str(b)
    # а сюди будемо додавати вже знайдені числа (схоже на попереднє завдання)
    found = ''
    # тепер перебираємо всі розряди числа b
    for char_b in b_str:
        # якщо роряд наявний в числі a, але відсутній у знайдених, збільшити лічильник та додати розряд до знайдених цифр
        if a_str.find(char_b) != -1 and found.find(char_b) == -1:
            num = num + 1
            found = found + char_b
    # повернути значення лічильника
    return num

print(counter(a,b))

# Неправильно

a1 = int(12345)
a2 = str(a1)
b1 = int(567)
b2 = str(b1)
sum = a2 + b2
c = []

def counter(sum):
    for digit in sum:
        c.append(int(digit))
    result = (len(c) - (len(set(c))))
    return (result)

print(counter(sum))
